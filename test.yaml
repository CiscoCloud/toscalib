2015/06/04 23:07:37 --- Result of the marshal:
{tosca_simple_yaml_1_0_0 TOSCA simple profile with wordpress, web server and mysql on the same server.
 [custom_types/wordpress.yaml] map[] map[] map[] map[] map[] map[] <nil> map[] {map[db_port:{integer Port for the MySQL database. map[default:3306] <nil> <nil>} cpus:{integer Number of CPUs for the server. map[constraints:[map[valid_values:[1 2 4 8]]] default:1] <nil> <nil>} db_name:{string The name of the database. map[default:wordpress] <nil> <nil>} db_user:{string The user name of the DB user. map[default:wp_user] <nil> <nil>} db_pwd:{string The WordPress database admin account password. map[default:wp_pass] <nil> <nil>} db_root_pwd:{string Root password for MySQL. map[] <nil> <nil>}] map[webserver:{tosca.nodes.WebServer  [] map[] map[] [map[host:map[node:server]]] map[] map[tosca.interfaces.node.lifecycle.Standard:map[create:webserver/webserver_install.sh start:webserver/webserver_start.sh]] map[] map[]} server:{tosca.nodes.Compute  [] map[] map[] <nil> map[os:map[properties:map[distribution:Ubuntu version:14.04 architecture:x86_64 type:Linux]] host:map[properties:map[disk_size:10 GB num_cpus:map[get_input:cpus] mem_size:4096 MB]]] map[] map[] map[]} wordpress:{tosca.nodes.WebApplication.WordPress  [] map[] map[] [map[host:map[node:webserver]] map[database_endpoint:map[node:mysql_database]]] map[] map[tosca.interfaces.node.lifecycle.Standard:map[configure:map[implementation:wordpress/wordpress_configure.sh inputs:map[wp_db_name:wordpress wp_db_user:wp_user wp_db_password:wp_pass]] create:wordpress/wordpress_install.sh]] map[] map[]} mysql_database:{tosca.nodes.Database  [] map[db_name:{  false <nil> 0 map[get_input:db_name] } db_user:{  false <nil> 0 map[get_input:db_user] } db_password:{  false <nil> 0 map[get_input:db_pwd] }] map[] [map[host:map[node:mysql_dbms]]] map[database_endpoint:map[properties:map[port:map[get_input:db_port]]]] map[tosca.interfaces.node.lifecycle.Standard:map[configure:map[inputs:map[db_name:wordpress db_user:wp_user db_password:wp_pass db_root_password:passw0rd] implementation:mysql/mysql_database_configure.sh]]] map[] map[]} mysql_dbms:{tosca.nodes.DBMS  [] map[dbms_root_password:{  false <nil> 0 map[get_input:db_root_pwd] } dbms_port:{  false <nil> 0 map[get_input:db_port] }] map[] [map[host:map[node:server]]] map[] map[tosca.interfaces.node.lifecycle.Standard:map[create:map[inputs:map[db_root_password:passw0rd] implementation:mysql/mysql_dbms_install.sh] start:mysql/mysql_dbms_start.sh configure:map[implementation:mysql/mysql_dbms_configure.sh inputs:map[db_port:3366]]]] map[] map[]}] map[website_url:{map[get_attribute:[server private_address]] URL for Wordpress wiki.}]}}

2015/06/04 23:07:37 tosca_definitions_version: tosca_simple_yaml_1_0_0
description: |
  TOSCA simple profile with wordpress, web server and mysql on the same server.
imports:
- custom_types/wordpress.yaml
topology_template:
  inputs:
    cpus:
      type: integer
      description: Number of CPUs for the server.
      constraints:
      - valid_values:
        - 1
        - 2
        - 4
        - 8
      default: 1
    db_name:
      type: string
      description: The name of the database.
      default: wordpress
    db_port:
      type: integer
      description: Port for the MySQL database.
      default: 3306
    db_pwd:
      type: string
      description: The WordPress database admin account password.
      default: wp_pass
    db_root_pwd:
      type: string
      description: Root password for MySQL.
    db_user:
      type: string
      description: The user name of the DB user.
      default: wp_user
  node_templates:
    mysql_database:
      type: tosca.nodes.Database
      properties:
        db_name:
          type: ""
          required: false
          default: null
          status: 0
          get_input: db_name
        db_password:
          type: ""
          required: false
          default: null
          status: 0
          get_input: db_pwd
        db_user:
          type: ""
          required: false
          default: null
          status: 0
          get_input: db_user
      requirements:
      - host:
          node: mysql_dbms
      capabilities:
        database_endpoint:
          properties:
            port:
              get_input: db_port
      interfaces:
        tosca.interfaces.node.lifecycle.Standard:
          configure:
            implementation: mysql/mysql_database_configure.sh
            inputs:
              db_name: wordpress
              db_password: wp_pass
              db_root_password: passw0rd
              db_user: wp_user
    mysql_dbms:
      type: tosca.nodes.DBMS
      properties:
        dbms_port:
          type: ""
          required: false
          default: null
          status: 0
          get_input: db_port
        dbms_root_password:
          type: ""
          required: false
          default: null
          status: 0
          get_input: db_root_pwd
      requirements:
      - host:
          node: server
      interfaces:
        tosca.interfaces.node.lifecycle.Standard:
          configure:
            implementation: mysql/mysql_dbms_configure.sh
            inputs:
              db_port: 3366
          create:
            implementation: mysql/mysql_dbms_install.sh
            inputs:
              db_root_password: passw0rd
          start: mysql/mysql_dbms_start.sh
    server:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            disk_size: 10 GB
            mem_size: 4096 MB
            num_cpus:
              get_input: cpus
        os:
          properties:
            architecture: x86_64
            distribution: Ubuntu
            type: Linux
            version: 14.04
      interfaces: {}
    webserver:
      type: tosca.nodes.WebServer
      requirements:
      - host:
          node: server
      interfaces:
        tosca.interfaces.node.lifecycle.Standard:
          create: webserver/webserver_install.sh
          start: webserver/webserver_start.sh
    wordpress:
      type: tosca.nodes.WebApplication.WordPress
      requirements:
      - host:
          node: webserver
      - database_endpoint:
          node: mysql_database
      interfaces:
        tosca.interfaces.node.lifecycle.Standard:
          configure:
            implementation: wordpress/wordpress_configure.sh
            inputs:
              wp_db_name: wordpress
              wp_db_password: wp_pass
              wp_db_user: wp_user
          create: wordpress/wordpress_install.sh
  outputs:
    website_url:
      value:
        get_attribute:
        - server
        - private_address
      description: URL for Wordpress wiki.


