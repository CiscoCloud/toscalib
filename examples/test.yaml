2015/12/30 22:59:38 Importing  custom_types/wordpress.yaml
2015/12/30 22:59:38 tosca_definitions_version: tosca_simple_yaml_1_0
description: |
  TOSCA simple profile with wordpress, web server and mysql on the same server.
node_types:
  tosca.nodes.BlockStorage:
    derived_from: tosca.nodes.Root
    properties:
      size:
        type: scalar-unit.size
        constraints: [{operator: "", values: null}]
      snapshot_id:
        type: string
      volume_id:
        type: string
    capabilities:
      attachment:
        type: tosca.capabilities.Attachment
        attributes: []
        valid_source_types: []
        occurences: []
  tosca.nodes.Compute:
    derived_from: tosca.nodes.Root
    attributes:
      networks:
        type: map
        entry_schema:
          type: tosca.datatypes.network.NetworkInfo
      ports:
        type: map
        entry_schema:
          type: tosca.datatypes.network.PortInfo
      private_address:
        type: string
      public_address:
        type: string
    requirements:
    - local_storage:
        capability: tosca.capabilities.Attachment
        node: tosca.nodes.BlockStorage
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.AttachesTo
    capabilities:
      binding:
        type: tosca.capabilities.network.Bindable
        attributes: []
        valid_source_types: []
        occurences: []
      endpoint:
        type: tosca.capabilities.Endpoint.Admin
        attributes: []
        valid_source_types: []
        occurences: []
      host:
        type: tosca.capabilities.Container
        attributes: []
        valid_source_types:
        - tosca.nodes.SoftwareComponent
        occurences: []
      os:
        type: tosca.capabilities.OperatingSystem
        attributes: []
        valid_source_types: []
        occurences: []
      scalable:
        type: tosca.capabilities.Scalable
        attributes: []
        valid_source_types: []
        occurences: []
  tosca.nodes.Container.Application:
    derived_from: tosca.nodes.Root
    requirements:
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.Container
        relationship: tosca.relationships.HostedOn
  tosca.nodes.Container.Runtime:
    derived_from: tosca.nodes.SoftwareComponent
    capabilities:
      host:
        type: tosca.capabilities.Container
        attributes: []
        valid_source_types: []
        occurences: []
      scalable:
        type: tosca.capabilities.Scalable
        attributes: []
        valid_source_types: []
        occurences: []
  tosca.nodes.DBMS:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      port:
        type: integer
        description: the port the DBMS service will listen to for data and requests
      root_password:
        type: string
        description: the optional root password for the DBMS service
    capabilities:
      host:
        type: tosca.capabilities.Container
        attributes: []
        valid_source_types:
        - tosca.nodes.Database
        occurences: []
  tosca.nodes.Database:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
        description: the logical name of the database
      password:
        type: string
        description: the optional password for the DB user account
      port:
        type: integer
        description: the port the underlying database service will listen to for data
      user:
        type: string
        description: the optional user account name for DB administration
    requirements:
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.DBMS
        relationship: tosca.relationships.HostedOn
    capabilities:
      database_endpoint:
        type: tosca.capabilities.Endpoint.Database
        attributes: []
        valid_source_types: []
        occurences: []
  tosca.nodes.LoadBalancer:
    derived_from: tosca.nodes.Root
    properties:
      algorithm:
        type: string
        status: experimental
    requirements:
    - application:
        capability: tosca.capabilities.Endpoint
        description: Connection to one or more load balanced applications
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.RoutesTo
    capabilities:
      client:
        type: tosca.capabilities.Endpoint.Public
        description: the Floating (IP) clientâ€™s on the public network can connect
          to
        attributes: []
        valid_source_types: []
        occurences: []
  tosca.nodes.ObjectStorage:
    derived_from: tosca.nodes.Root
    properties:
      maxsize:
        type: scalar-unit.size
        constraints: [{operator: "", values: null}]
      name:
        type: string
      size:
        type: scalar-unit.size
        constraints: [{operator: "", values: null}]
    capabilities:
      storage_endpoint:
        type: tosca.capabilities.Endpoint
        attributes: []
        valid_source_types: []
        occurences: []
  tosca.nodes.Root:
    description: The TOSCA Node Type all other TOSCA base Node Types derive from
    attributes:
      state:
        type: string
      tosca_id:
        type: string
      tosca_name:
        type: string
    requirements:
    - dependency:
        capability: tosca.capabilities.Node
        node: tosca.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.DependsOn
    capabilities:
      feature:
        type: tosca.capabilities.Node
        attributes: []
        valid_source_types: []
        occurences: []
    interfaces:
      Standard:
        type:
          implementation: tosca.interfaces.node.lifecycle.Standard
  tosca.nodes.SoftwareComponent:
    derived_from: tosca.nodes.Root
    properties:
      admin_credential:
        type: tosca.datatypes.Credential
      component_version:
        type: version
    requirements:
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.Compute
        relationship: tosca.relationships.HostedOn
  tosca.nodes.WebApplication:
    derived_from: tosca.nodes.Root
    properties:
      context_root:
        type: string
    requirements:
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.WebServer
        relationship: tosca.relationships.HostedOn
    capabilities:
      app_endpoint:
        type: tosca.capabilities.Endpoint
        attributes: []
        valid_source_types: []
        occurences: []
  tosca.nodes.WebApplication.WordPress:
    derived_from: tosca.nodes.WebApplication
    requirements:
    - database_endpoint:
        capability: tosca.capabilities.Endpoint.Database
        node: tosca.nodes.Database
        relationship: tosca.relationships.ConnectsTo
    interfaces:
      Standard:
        inputs: {}
  tosca.nodes.WebServer:
    derived_from: tosca.nodes.SoftwareComponent
    capabilities:
      admin_endpoint:
        type: tosca.capabilities.Endpoint.Admin
        attributes: []
        valid_source_types: []
        occurences: []
      data_endpoint:
        type: tosca.capabilities.Endpoint
        attributes: []
        valid_source_types: []
        occurences: []
      host:
        type: tosca.capabilities.Container
        attributes: []
        valid_source_types:
        - tosca.nodes.WebApplication
        occurences: []
relationship_types:
  tosca.relationships.AttachesTo:
    derived_from: tosca.relationships.Root
    properties:
      device:
        required: false
        type: string
      location:
        constraints:
        - min_length: 1
        type: string
    valid_target_types:
    - tosca.capabilities.Attachment
  tosca.relationships.ConnectsTo:
    derived_from: tosca.relationships.Root
    properties:
      credential:
        required: false
        type: tosca.datatypes.Credential
    valid_target_types:
    - tosca.capabilities.Endpoint
  tosca.relationships.DependsOn:
    derived_from: tosca.relationships.Root
    valid_target_types:
    - tosca.capabilities.Node
  tosca.relationships.HostedOn:
    derived_from: tosca.relationships.Root
    valid_target_types:
    - tosca.capabilities.Container
  tosca.relationships.Root:
    attributes:
      tosca_id:
        type: string
      tosca_name:
        type: string
    description: The TOSCA root Relationship Type all other TOSCA base Relationship
      Types derive from
    interfaces:
      Configure:
        type: tosca.interfaces.relationship.Configure
  tosca.relationships.RoutesTo:
    derived_from: tosca.relationships.ConnectsTo
    valid_target_types:
    - tosca.capabilities.Endpoint
capability_types:
  tosca.capabilities.Attachment:
    derived_from: tosca.capabilities.Root
  tosca.capabilities.Container:
    derived_from: tosca.capabilities.Root
    properties:
      cpu_frequency:
        constraints:
        - greater_or_equal: 0.1 GHz
        required: false
        type: scalar-unit.frequency
      disk_size:
        constraints:
        - greater_or_equal: 0 MB
        required: false
        type: scalar-unit.size
      mem_size:
        constraints:
        - greater_or_equal: 0 MB
        required: false
        type: scalar-unit.size
      num_cpus:
        constraints:
        - greater_or_equal: 1
        required: false
        type: integer
  tosca.capabilities.Endpoint:
    attributes:
      ip_address:
        type: string
    derived_from: tosca.capabilities.Root
    properties:
      initiator:
        constraints:
        - valid_values:
          - source
          - target
          - peer
        default: source
        type: string
      network_name:
        default: PRIVATE
        required: false
        type: string
      port:
        required: false
        type: PortDef
      port_name:
        required: false
        type: string
      ports:
        constraints:
        - min_length: 1
        entry_schema:
          type: PortSpec
        required: false
        type: map
      protocol:
        default: tcp
        type: string
      secure:
        default: false
        type: boolean
      url_path:
        required: false
        type: string
  tosca.capabilities.Endpoint.Admin:
    derived_from: tosca.capabilities.Endpoint
    properties:
      secure: true
  tosca.capabilities.Endpoint.Database:
    derived_from: tosca.capabilities.Endpoint
  tosca.capabilities.Endpoint.Public:
    derived_from: tosca.capabilities.Endpoint
    properties:
      dns_name:
        description: The optional name to register with DNS
        required: false
        status: experimental
        type: string
      floating:
        default: false
        description: |
          indicates that the public address should be allocated from a pool of floating IPs that are associated with the network.
        status: experimental
        type: boolean
      network_name: PUBLIC
  tosca.capabilities.Node:
    derived_from: tosca.capabilities.Root
  tosca.capabilities.OperatingSystem:
    derived_from: tosca.capabilities.Root
    properties:
      architecture:
        required: false
        type: string
      distribution:
        required: false
        type: string
      type:
        required: false
        type: string
      version:
        required: false
        type: version
  tosca.capabilities.Root:
    description: The TOSCA root Capability Type all other TOSCA base Capability Types
      derive from
  tosca.capabilities.Scalable:
    derived_from: tosca.capabilities.Root
    properties:
      default_instances:
        type: integer
      max_instances:
        default: 1
        type: integer
      min_instances:
        default: 1
        type: integer
  tosca.capabilities.network.Bindable:
    derived_from: tosca.capabilities.Node
interface_types:
  tosca.interfaces.node.lifecycle.Standard:
    operations: {}
    inputs: {}
  tosca.interfaces.relationship.Configure:
    operations: {}
    inputs: {}
topology_template:
  inputs:
    cpus:
      type: integer
      description: Number of CPUs for the server.
      default: "1"
      constraints: [{operator: "", values: null}]
    db_name:
      type: string
      description: The name of the database.
      default: wordpress
    db_port:
      type: PortDef
      description: Port for the MySQL database.
      default: "3306"
    db_pwd:
      type: string
      description: The WordPress database admin account password.
      default: wp_pass
    db_root_pwd:
      type: string
      description: Root password for MySQL.
    db_user:
      type: string
      description: The user name of the DB user.
      default: wp_user
  node_templates:
    mysql_database:
      type: tosca.nodes.Database
      properties:
        name: {}
        password: {}
        user: {}
      requirements:
      - host:
          node: mysql_dbms
      capabilities:
        database_endpoint:
          properties:
            port:
              get_input: db_port
      interfaces:
        Standard:
          operations: {}
          inputs: {}
      tosca_id: 31
      toca_name: mysql_database
    mysql_dbms:
      type: tosca.nodes.DBMS
      properties:
        port: {}
        root_password: {}
      requirements:
      - host:
          node: server
      interfaces:
        Standard:
          operations: {}
          inputs: {}
      tosca_id: 41
      toca_name: mysql_dbms
    server:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            disk_size: 10 GB
            mem_size: 4096 MB
            num_cpus:
              get_input: cpus
        os:
          properties:
            architecture: x86_64
            distribution: Ubuntu
            type: Linux
            version: 14.04
      tosca_id: 11
      toca_name: server
    webserver:
      type: tosca.nodes.WebServer
      requirements:
      - host:
          node: server
      interfaces:
        Standard:
          operations: {}
          inputs: {}
      tosca_id: 1
      toca_name: webserver
    wordpress:
      type: tosca.nodes.WebApplication.WordPress
      requirements:
      - host:
          node: webserver
      - database_endpoint:
          node: mysql_database
      interfaces:
        Standard:
          operations: {}
          inputs: {}
      tosca_id: 21
      toca_name: wordpress
  outputs:
    website_url:
      value:
        get_attribute:
        - server
        - private_address
      description: URL for Wordpress wiki.
adjacencymatrix: {}

